print("cipher addition")
print(
    int(64 * 0.75) * 32 * 32 * 9 * 3  # conv1
    + int(64 * 0.75) * 32 * 32  # bn1
    + 0  # square
    + int(64 * 0.75) * 16 * 16 * 9 * 64  # conv2
    + int(64 * 0.75) * 16 * 16  # bn2
    + 0  # ReLU
    + int(64 * 0.75) * 8 * 8 * 3  # pool
)


print("total addition")
print(
    64 * 32 * 32 * 9 * 3  # conv1
    + 64 * 32 * 32  # bn1
    + 0  # square
    + 64 * 32 * 32 * 9 * 64  # conv2
    + 64 * 32 * 32  # bn2
    + 0  # ReLU
    + 64 * 16 * 16 * 3  # pool2
    + 128 * 16 * 16 * 9 * 64  # conv3
    + 128 * 16 * 16  # bn3
    + 0  # ReLU
    + 128 * 16 * 16 * 9 * 128  # conv4
    + 128 * 16 * 16  # bn4
    + 0  # ReLU
    + 128 * 8 * 8 * 3  # pool4
    + 256 * 8 * 8 * 9 * 128  # conv5
    + 256 * 8 * 8  # bn5
    + 0  # ReLU
    + 256 * 8 * 8 * 9 * 256  # conv6
    + 256 * 8 * 8  # bn6
    + 0  # ReLU
    + 256 * 8 * 8 * 9 * 256  # conv7
    + 256 * 8 * 8  # bn7
    + 0  # ReLU
    + 256 * 4 * 4 * 3  # pool7
    + 512 * 4 * 4 * 9 * 256  # conv8
    + 512 * 4 * 4  # bn8
    + 0  # ReLU
    + 512 * 4 * 4 * 9 * 512  # conv9
    + 512 * 4 * 4  # bn9
    + 0  # ReLU
    + 512 * 4 * 4 * 9 * 512  # conv10
    + 512 * 4 * 4  # bn10
    + 0  # ReLU
    + 512 * 2 * 2 * 3  # pool10
    + 512 * 2 * 2 * 9 * 256  # conv11
    + 512 * 2 * 2  # bn11
    + 0  # ReLU
    + 512 * 2 * 2 * 9 * 512  # conv12
    + 512 * 2 * 2  # bn12
    + 0  # ReLU
    + 512 * 2 * 2 * 9 * 512  # conv13
    + 512 * 2 * 2  # bn13
    + 0  # ReLU
    + 512 * 1 * 1 * 3  # pool13
    + 1 * 511 * 512  # fc1
    + 1 * 511 * 512  # fc2
    + 1 * 511 * 10  # output
)


print("cipher multiplication")
print(
    int(64 * 0.75) * 32 * 32 * 9 * 3  # conv1
    + int(64 * 0.75) * 32 * 32  # bn1
    + int(64 * 0.75) * 32 * 32  # square
    + int(64 * 0.75) * 16 * 16 * 9 * 64  # conv2
    + int(64 * 0.75) * 16 * 16  # bn2
    + 0  # ReLU
    + int(64 * 0.75) * 8 * 8  # pool
)


print("total multiplication")
print(
    64 * 32 * 32 * 9 * 3  # conv1
    + 64 * 32 * 32  # bn1
    + 64 * 32 * 32  # square
    + 64 * 32 * 32 * 9 * 64  # conv2
    + 64 * 32 * 32  # bn2
    + 0  # ReLU
    + 64 * 16 * 16 * 3  # pool2
    + 128 * 16 * 16 * 9 * 64  # conv3
    + 128 * 16 * 16  # bn3
    + 0  # ReLU
    + 128 * 16 * 16 * 9 * 128  # conv4
    + 128 * 16 * 16  # bn4
    + 0  # ReLU
    + 128 * 8 * 8 * 3  # pool4
    + 256 * 8 * 8 * 9 * 128  # conv5
    + 256 * 8 * 8  # bn5
    + 0  # ReLU
    + 256 * 8 * 8 * 9 * 256  # conv6
    + 256 * 8 * 8  # bn6
    + 0  # ReLU
    + 256 * 8 * 8 * 9 * 256  # conv7
    + 256 * 8 * 8  # bn7
    + 0  # ReLU
    + 256 * 4 * 4 * 3  # pool7
    + 512 * 4 * 4 * 9 * 256  # conv8
    + 512 * 4 * 4  # bn8
    + 0  # ReLU
    + 512 * 4 * 4 * 9 * 512  # conv9
    + 512 * 4 * 4  # bn9
    + 0  # ReLU
    + 512 * 4 * 4 * 9 * 512  # conv10
    + 512 * 4 * 4  # bn10
    + 0  # ReLU
    + 512 * 2 * 2 * 3  # pool10
    + 512 * 2 * 2 * 9 * 256  # conv11
    + 512 * 2 * 2  # bn11
    + 0  # ReLU
    + 512 * 2 * 2 * 9 * 512  # conv12
    + 512 * 2 * 2  # bn12
    + 0  # ReLU
    + 512 * 2 * 2 * 9 * 512  # conv13
    + 512 * 2 * 2  # bn13
    + 0  # ReLU
    + 512 * 1 * 1 * 3  # pool13
    + 1 * 512 * 512  # fc1
    + 1 * 512 * 512  # fc2
    + 1 * 512 * 10  # output
)
